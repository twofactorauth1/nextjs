{"version":3,"file":"4.ff19a5c6039b0df56ce0.hot-update.js","sources":["webpack:///components/Prices.js"],"sourcesContent":["class Prices extends React.Component {\n  state = {\n      currency: 'USD',\n  }\n\n  render(){\n      let list = '';\n\n      if(this.state.currency === 'USD') {\n        list = <li className=\"list-group-item\">\n                    Bitcoin Rate for {this.props.bpi.USD.description}\n                    : <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>  \n                    <strong>{this.props.bpi.USD.rate }</strong>\n                </li>\n      } else if (this.state.currency === 'GBP'){\n        list = <li className=\"list-group-item\">\n                    Bitcoin Rate for {this.props.bpi.GBP.description}\n                    : <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>  \n                    <strong>{this.props.bpi.GBP.rate }</strong>\n                </li>\n      } else if (this.state.currency === 'EUR'){\n        list = <li className=\"list-group-item\">\n                    Bitcoin Rate for {this.props.bpi.EUR.description}\n                    : <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>  \n                    <strong>{this.props.bpi.USD.rate }</strong>\n                </li>\n      }\n      return(\n          <div>\n              <ul className=\"list-group\">\n                { list }\n              </ul>\n              <br/>\n              <select className=\"form-control\" onChange={e => this.setState({currency: e.target.value})} >\n                  <option value=\"USD\">USD</option>\n                  <option value=\"GBP\">GBP</option>\n                  <option value=\"EUR\">EUR</option>\n              </select>\n          </div>\n      );\n  }\n}\n\nexport default Prices;\n\n\n// WEBPACK FOOTER //\n// components/Prices.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxCA;AACA;AA0CA;;;;A","sourceRoot":""}